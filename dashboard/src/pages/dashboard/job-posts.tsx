import { GetServerSideProps, type NextPage } from "next";
import { unstable_getServerSession as getServerSession } from 'next-auth';
import { authOptions } from '../api/auth/[...nextauth]';
import Head from "next/head";
import { useHydratedSession } from '@utils/customHooks';
import { NextPageWithLayout } from '../_app';
import { PageLayout } from '@components/PageLayout';

const JobPosts: NextPageWithLayout = () => {
   const session = useHydratedSession();


  return (
    <>
      <Head>
        <title>Dashboard - Theo&apos;s Typesafe Cult</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
            <h2>Job Posts!</h2>
    </>
  );
};

JobPosts.getLayout = function getLayout(page: React.ReactElement) {
	return (
		<>
			<PageLayout>{page}</PageLayout>
		</>
	);
};

export default JobPosts;


export const getServerSideProps: GetServerSideProps = async context => {
	const session = await getServerSession(
		context.req,
		context.res,
		authOptions
	);

	if (!session) {
		return {
			redirect: {
				permanent: false,
				destination: `/`,
			},
		};
	}
	return {
		props: {
			session: session,
		},
	};
};