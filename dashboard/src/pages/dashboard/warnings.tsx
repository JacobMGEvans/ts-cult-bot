import { GetServerSideProps, type NextPage } from 'next';
import { unstable_getServerSession as getServerSession } from 'next-auth';
import { authOptions } from '../api/auth/[...nextauth]';
import Head from 'next/head';
import { useHydratedSession } from '@utils/customHooks';
import { NextPageWithLayout } from '../_app';
import { PageLayout } from '@components/PageLayout';
import { api } from '@utils/api';
import dayjs from 'dayjs';
import Title from '@components/ui/Title';
import clsx from 'clsx';

const Warnings: NextPageWithLayout = () => {
  const session = useHydratedSession();

  const warnings = api.warnings.getAllWarnings.useQuery();

  console.log('warnings', warnings.data);

  return (
    <>
      <Head>
        <title>Dashboard - Theo&apos;s Typesafe Cult</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="flex flex-row items-baseline">
          <div className="grow">
            <Title type="h1">Warnings</Title>
          </div>
          <div className="">
            <form>
              <input
                className="rounded p-1"
                type="text"
                placeholder="Search (wip)"
              />
            </form>
          </div>
        </div>
        <div className="mt-10 rounded bg-slate-800 drop-shadow-lg">
          <div className="py-8">
            <div className="flex flex-row">
              <div className="w-40 px-4 py-2">User</div>
              <div className="w-40 px-4 py-2">Admin</div>
              <div className="grow px-4 py-2">Reason</div>
              <div className="w-40 px-4 py-2">Date</div>
            </div>

            {warnings?.data?.map((warning, index) => {
              return (
                <div className="my-2 flex flex-row" key={warning.id}>
                  <div
                    className={clsx(
                      'w-40 px-4 py-2 text-sm',
                      index % 2 ? 'bg-slate-800' : 'bg-slate-700'
                    )}
                  >
                    {warning.user.name}
                  </div>
                  <div
                    className={clsx(
                      'w-40 px-4 py-2 text-sm',
                      index % 2 ? 'bg-slate-800' : 'bg-slate-700'
                    )}
                  >
                    {warning.adminId}
                  </div>
                  <div
                    className={clsx(
                      'grow px-4 py-2 text-sm',
                      index % 2 ? 'bg-slate-800' : 'bg-slate-700'
                    )}
                  >
                    {warning.reason}
                  </div>
                  <div
                    className={clsx(
                      'w-40 px-4 py-2 text-sm',
                      index % 2 ? 'bg-slate-800' : 'bg-slate-700'
                    )}
                  >
                    {dayjs(new Date(warning.dateAdded)).format('MMM D, YYYY')}
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      </main>
    </>
  );
};

Warnings.getLayout = function getLayout(page: React.ReactElement) {
  return (
    <>
      <PageLayout>{page}</PageLayout>
    </>
  );
};

export default Warnings;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getServerSession(context.req, context.res, authOptions);

  if (!session) {
    return {
      redirect: {
        permanent: false,
        destination: `/`,
      },
    };
  }
  return {
    props: {
      session: session,
    },
  };
};
