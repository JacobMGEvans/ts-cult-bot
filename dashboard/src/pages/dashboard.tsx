import { GetServerSideProps, type NextPage } from 'next';
import { unstable_getServerSession as getServerSession } from 'next-auth';
import { authOptions } from './api/auth/[...nextauth]';
import Head from 'next/head';
import Link from 'next/link';
import { useHydratedSession } from '../utils/customHooks';
import { NextPageWithLayout } from './_app';
import { PageLayout } from '../components/PageLayout';

const Dashboard: NextPageWithLayout = () => {
  const session = useHydratedSession();

  const sections = [
    {
      name: 'Users',
      href: '/users',
      info: 'A list of all users on the site and their current mod status',
    },
    {
      name: 'Resources',
      href: '/resources',
      info: 'A list of all resources stored in the bot, and all Resource Types and Tags used by the bot commands',
    },
    {
      name: 'Job Posts',
      href: '/job-posts',
      info: 'All job posts submitted, and whether they were approved.',
    },
    {
      name: 'Warnings',
      href: '/warnings',
      info: "Who is on Theo's nice list and who will a lump of coal or a ban?",
    },
    {
      name: 'Theoisms',
      href: '/theoisms',
      info: "Theo's hot takes and other fun quotes. If someone got upset on Twitter it might belong here.",
    },
  ];

  return (
    <>
      <Head>
        <title>Dashboard - Theo&apos;s Typesafe Cult</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="grid w-full grid-cols-3 gap-4">
        {sections.map((section, index) => {
          return (
            <div
              key={index}
              className="flex flex-col items-center rounded-2xl bg-slate-800 py-6 px-4 text-xl text-slate-50 drop-shadow-xl"
            >
              <h2 className="text-2xl">{section.name}</h2>
              <p className="p-4 text-lg">{section.info}</p>
              <Link href={`/dashboard${section.href}`}>
                <button className="mt-4 rounded-3xl bg-yellow-300 py-2 px-6 text-black drop-shadow-xl hover:bg-yellow-300/70">
                  Manage {section.name}
                </button>
              </Link>
            </div>
          );
        })}
      </div>
    </>
  );
};

Dashboard.getLayout = function getLayout(page: React.ReactElement) {
  return (
    <>
      <PageLayout>{page}</PageLayout>
    </>
  );
};

export default Dashboard;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getServerSession(context.req, context.res, authOptions);

  if (!session) {
    return {
      redirect: {
        permanent: false,
        destination: `/`,
      },
    };
  }
  return {
    props: {
      session: session,
    },
  };
};
